/*
  Copyright (C) 2016      Roman Y. Dayneko, <dayneko3000@gmail.com>
                2017-2018 Nikita Yu. Lovyagin, <lovyagin@mail.com>

  This program can be distributed under the terms of the GNU GPLv3.
  See the file COPYING.
*/

"Usage: %s [--help|--version] hostdir cmd [arguments]",                        /* FGACFSCTL_MSG_USAGE     */

"View or modify FGACFS permissions\n"
    "%s [--help|--version] hostdir cmd [arguments]\n"
    "hostdir\treal filesystem directory FGACFS stored in\n"
    "cmd\tcontrol command, usage\n"
    "\ttype\t\t\tshow filesystem type (db, xattr or fxattr)\n"
    "\tshow entry\t\tshow dir/file detailed owner and permissions info\n"
    "\t\t\t\tentry\tlocal FGACFS entry path, starting with \'/\'\n"
    "\tget obj entry\t\tget specific entry parameter\n"
    "\t\t\t\tthe answer is always printed as single (parsable) string\n"
    "\t\t\t\tobj\tcould be\n"
    "\t\t\t\t\tuid\t\t\tprint file or dir owner UID\n"
    "\t\t\t\t\tgid\t\t\tprint file or dir owner GID\n"
    "\t\t\t\t\tinh flag\t\tprint 1, if specified inheritance\n\t\t\t\t\t\t\t\tflag (see below) is set, 0 otherwise\n"
    "\t\t\t\t\tprm cat [id] flag {A|D}\tprint 1, if specified permission\n\t\t\t\t\t\t\t\tflag of the cat/id (see below)is set, 0 otherwise\n"
    "\t\t\t\tentry\tlocal FGACFS entry path, starting with \'/\'\n"
    "\tset obj [val] entry\tset specific entry parameter\n"
    "\t\t\t\tobj\tcould be\n"
    "\t\t\t\t\tuid\t\t\tset file or dir owner UID to val\n"
    "\t\t\t\t\tgid\t\t\tset file or dir owner GID to val\n"
    "\t\t\t\t\tinh flag\t\tset (if val=1 or omited) or unset (if val=0)\n\t\t\t\t\t\t\t\tspecified inheritance flag (see below)\n"
    "\t\t\t\t\tprm cat [id] flag {A|D}\tset (if val=1 or omited) or unset (if val=0)\n\t\t\t\t\t\t\t\tspecified permission flag of cat/id (see below)\n"
    "\t\t\t\tentry\tlocal FGACFS entry path, starting with \'/\'\n"
    "\ttest uid:gid[:cmd] flag entry\n\t\t\t\t\t\t\t\t"
                    "print 1, if operation specified by permission flag (see below) is permitted\n\t\t\t\t\t\t\t\t"
                    "for process with specified uid, gid and cmd (optionally)\n\t\t\t\t\t\t\t\t"
                    "print 0, if the operation is unpermitted\n\t\t\t\t\t\t\t\t"
                    "full check (as for running process) including inheritance is performed\n"


    "\n\nPermissions categories (cat) controlling users and groups to which the permissions are applied\n"
    "\tALL\tALL users (no id applied)\n"
    "\tOUS\tOwner USer (entry owner, no id applied)\n"
    "\tOGR\tOwner GRoup (entry owner\'s group, no id applied)\n"
    "\tOTH\tOTHer users (not owner, not owner group, no id applied)\n"
    "\tUID\tUser ID (id=system user id)\n"
    "\tGID\tGroup ID (id=system group id)\n"
    "\tPEX\tProcess EXecutable (permission for specific process, id=path to system path executable)\n"
    "POSIX user-group-other (for stat) permissions are formed in a following way\n"
    "\tuser and group permissions are formed from FGACFS permissions for corresponding user\n"
    "\tother permissions are formed from OTHF FGACFS category, if calling process is run by owner or owner group\n"
    "\t\tor for specified user, if the user is neither owner nor from owner\'s groups\n"

    "\nPermissions flags consists of two groups:\n"
    "\tfile permissions, controlling file operation, but could be set to directory also\n"
    "\t\tto be inherited to files inside the directory (see INH, SET, SPI, SPS, CPR inheritance flags)\n"
    "\t\tor subdirectories (see IFP, IFS, SFP, SFS, CFP inheritance flags),\n"
    "\tand directory (dir) permissions, that could be set to directories only\n"
    "\t\tand could be inherited by subdirectories (via INH, SET, SPI, SPS, CPR inheritance flag)\n"
    "Permissions are of three classes read (R), write (W) and executable (X)\n"
    "\twhich associate them to RWX model in the following way:\n"
    "\tif ONE OF R/W/X FGACFS permission is set it means that corresponding POSIX (stat) R/W/X flag is set,\n"
    "\t(un)setting (chmod) POSIX R/W/X flags (un)sets ALL OF R/W/X FGACFS permissions\n"
    "File permissions flags:\n"
    "\tFRD\t(R) read file\n"
    "\tFRA\t(R) stat file (read attributes)\n"
    "\tFRP\t(R) read file permissions (FGACFS)\n"
    "\tFXA\t(R) read file extended attributes (getattr)\n"
    "\tFSL\t(R) read (follow) symlink\n"
    "\tFWR\t(W) write to file (modify)\n"
    "\tFCA\t(W) change attributes (utime)\n"
    "\tFCP\t(W) chmod (change permission) file\n"
    "\tFCI\t(W) change permission inheritance of the file\n"
    "\tFCO\t(W) chown file (only user)\n"
    "\tFCG\t(W) change owner group\n"
    "\tFOP\t(W) chown and chgroup to parent dir owner:group\n"
    "\tFRM\t(W) remove file\n"
    "\tFMV\t(W) rename file\n"
    "\tFMX\t(W) Modify file extended attributes\n"
    "\tFSX\t(W) (Un)set file execution for bit for current user\n"
    "\tFEX\t(X) execute file (affects STAT only, the rest controlled via POSIX)\n"
    "Directory permissions flags:\n"
    "\tDRD\t(R) read directory context\n"
    "\tDRA\t(R) stat directory (read attributes)\n"
    "\tDRP\t(R) read directory permissions (FGACFS)\n"
    "\tDXA\t(R) read directory extended attributes\n"
    "\tDAF\t(W) create (add) files (mknod), same owner as parent directory's one\n"
    "\tDAD\t(W) create (add) subdirectory (mkdir), same owner as parent directory's one\n"
    "\tDAL\t(W) create (add) symbolic link in the directory, same owner as parent directory's one\n"
    "\tDAC\t(W) create (add) symbolic device, same owner as parent directory's one\n"
    "\tDAB\t(W) create (add) block device, same owner as parent directory's one\n"
    "\tDAO\t(W) create (add) socket, same owner as parent directory's one\n"
    "\tDAP\t(W) create (add) fifo, same owner as parent directory's one\n"
    "\tDMK\t(W) create own files (mknod)\n"
    "\tDMD\t(W) create own subdirectory (mkdir)\n"
    "\tDSL\t(W) create own symbolic link in the directory\n"
    "\tDCH\t(W) create own symbolic device\n"
    "\tDBL\t(W) create own block device\n"
    "\tDSC\t(W) create own socket\n"
    "\tDFF\t(W) create own fifo\n"
    "\tDCA\t(W) change attributes (utime)\n"
    "\tDCP\t(W) chmod (change permission) directory\n"
    "\tDCI\t(W) change permission inheritance rules of the directory\n"
    "\tDCT\t(W) change permission transmit rules of the directory\n"
    "\tDCO\t(W) chown directory (only user)\n"
    "\tDCG\t(W) change owner group\n"
    "\tDOP\t(W) chown and chgroup parent dir owner:group\n"
    "\tDRM\t(W) remove directory\n"
    "\tDMV\t(W) rename directory\n"
    "\tDMX\t(W) modify directory extended attributes\n"
    "\tDEX\t(X) execute directory (chdir, affect STAT only)\n"

    "\nPermission for specific process is checked in the following way:\n"
    "\t\tcheck for ALL user permissions\n"
    "\t\tcheck for calling process user permissions\n"
    "\t\tcheck for calling process group permissions\n"
    "\t\tcheck for calling process executable permissions (if enabled)\n"
    "\t\tcheck for either OUS, UGR or OTH permission, if calling process user\n"
    "\t\t\tis owner or in group or neither owner not in group of the entry\n"
    "recursively scanning for inherited permissions if corresponding flag is set\n"
    "However root (uid=0) and FGACFS directory owner always granted all the operations\n"
    "\t(except FEX which is set appropriately)\n"
    "Also, DEX permission should be set for all directories in PATH, otherwise operation is not permitted\n"

    "\nPermissions flag are set to allow or to deny operation separately\n"
    "\tin the CLI (set/get) it is controlled via D (deny) or A (allow) parameter\n"
    "\tdeny flag is more strong, meaning if operation is permitted somehow and denied somehow,\n"
    "it is denied in fact, and iff allow flag is set and no deny flag is set operation is permitted\n"

    "\n\nInheritance flags are\n"
    "\tINH\tinherit permission from parent directory\n"
    "\tSET\tkeep inherited permission when inherit flag removed\n"
    "\tIFP\t(dir only) inherit permission transmitted to file from parent directory\n"
    "\tIFS\t(dir only) keep inherit permission transmitted to file when flag is removed\n"
    "\tSPI\t(dir only) set inheritance (INH) flag on new entries\n"
    "\tSPS\t(dir only) set copy permission (CPR) flag on new entries\n"
    "\tSFP\t(dir only) set transmitted permission inheritance (IFP) flag on new entries\n"
    "\tSFS\t(dir only) set keep transmitted permission (IFS) flag on new entries\n"
    "\tCFP\t(dir only) copy transmitted permission to new entries (like inherited)\n"
    "\tSCF\t(dir only) set copy transmitted permission (CFP) flag on new entries\n"


    "\n\nWarning, if running not under root and not under FGACFS owner,\n"
    "         all operations are provided if permitted only\n"                 /* FGACFSCTL_MSG_HELP    */
